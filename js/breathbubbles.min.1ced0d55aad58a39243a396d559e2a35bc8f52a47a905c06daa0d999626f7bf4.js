class BreathBubbles{constructor(e,t={}){this.canvas=e,this.ctx=e.getContext("2d"),this.dpr=window.devicePixelRatio||1,this.options=Object.assign({bubbleCount:42,baseHue:190,hueRange:40,minRadius:14,maxRadius:64,floatSpeed:[.12,.55],wobbleStrength:.55,breathingPeriod:6400,connectionDistance:148,interactiveForce:.12,parallax:.06},t),this.bubbles=[],this.t0=performance.now(),this.mouse={x:0,y:0,active:!1},this.resizeObserver=new ResizeObserver(()=>this.resize()),this.resizeObserver.observe(e),this.bind(),this.resize(),this.init(),requestAnimationFrame(()=>this.frame())}bind(){window.addEventListener("pointermove",e=>{const t=this.canvas.getBoundingClientRect();this.mouse.x=(e.clientX-t.left)*this.dpr,this.mouse.y=(e.clientY-t.top)*this.dpr,this.mouse.active=!0}),window.addEventListener("pointerleave",()=>this.mouse.active=!1),window.addEventListener("resize",()=>this.resize()),window.addEventListener("visibilitychange",()=>{document.visibilityState==="visible"&&(this.t0=performance.now())})}resize(){const{width:e,height:t}=this.canvas.getBoundingClientRect();this.canvas.width=e*this.dpr,this.canvas.height=t*this.dpr}rand(e,t){return Math.random()*(t-e)+e}init(){this.bubbles.length=0;for(let e=0;e<this.options.bubbleCount;e++)this.bubbles.push(this.makeBubble())}makeBubble(){const e=this.rand(this.options.minRadius,this.options.maxRadius);return{x:Math.random()*this.canvas.width,y:Math.random()*this.canvas.height,r:e,baseR:e,hue:this.options.baseHue+this.rand(-this.options.hueRange/2,this.options.hueRange/2),vy:-this.rand(this.options.floatSpeed[0],this.options.floatSpeed[1]),vx:this.rand(-.15,.15),wobbleSeed:Math.random()*1e3}}frame(){const n=performance.now(),e=n-this.t0;this.ctx.clearRect(0,0,this.canvas.width,this.canvas.height);const t=(Math.sin(e/this.options.breathingPeriod*Math.PI*2)+1)/2;for(const n of this.bubbles){const s=.82+t*.36;if(n.r=n.baseR*s,n.y+=n.vy*(.6+t*.8),n.x+=n.vx+Math.sin((e+n.wobbleSeed)*.0018)*this.options.wobbleStrength,n.y+n.r<0&&(n.y=this.canvas.height+n.r*2,n.x=Math.random()*this.canvas.width),n.x-n.r>this.canvas.width?n.x=-n.r:n.x+n.r<0&&(n.x=this.canvas.width+n.r),this.mouse.active){const e=n.x-this.mouse.x,t=n.y-this.mouse.y,s=Math.hypot(e,t);if(s<180*this.dpr){const o=(1-s/(180*this.dpr))*this.options.interactiveForce;n.x+=e*o,n.y+=t*o}}}this.ctx.lineWidth=1*this.dpr;for(let t=0;t<this.bubbles.length;t++){const e=this.bubbles[t];for(let s=t+1;s<this.bubbles.length;s++){const n=this.bubbles[s],i=e.x-n.x,a=e.y-n.y,o=Math.hypot(i,a);if(o<this.options.connectionDistance*this.dpr){const t=1-o/(this.options.connectionDistance*this.dpr);this.ctx.strokeStyle=`hsla(${(e.hue+n.hue)/2}, 80%, 62%, ${t*.12})`,this.ctx.beginPath(),this.ctx.moveTo(e.x,e.y),this.ctx.lineTo(n.x,n.y),this.ctx.stroke()}}}for(const e of this.bubbles){const t=this.ctx.createRadialGradient(e.x-e.r*.4,e.y-e.r*.5,e.r*.1,e.x,e.y,e.r);t.addColorStop(0,`hsla(${e.hue}, 95%, 78%, 0.85)`),t.addColorStop(.55,`hsla(${e.hue+10}, 85%, 62%, 0.45)`),t.addColorStop(1,`hsla(${e.hue}, 90%, 40%, 0.10)`),this.ctx.fillStyle=t,this.ctx.beginPath(),this.ctx.arc(e.x,e.y,e.r,0,Math.PI*2),this.ctx.fill(),this.ctx.strokeStyle=`hsla(${e.hue}, 95%, 82%, 0.35)`,this.ctx.lineWidth=1.2*this.dpr,this.ctx.stroke()}requestAnimationFrame(()=>this.frame())}}function initBreathBubbles(){const e=document.getElementById("breathBubblesCanvas");if(!e)return;new BreathBubbles(e)}document.readyState!=="loading"?initBreathBubbles():document.addEventListener("DOMContentLoaded",initBreathBubbles)